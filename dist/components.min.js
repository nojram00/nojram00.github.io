window.carousels={};var prod=!0;function $(e){const t=document.querySelector(e);return new Proxy(t,{get(e,n,o){if(void 0!==n)switch(n){case"click":return function(t){return e.addEventListener("click",t)};case"data":return{get:function(t){return e.dataset[t]},set:function(t,n){e.dataset[t]=n},delete:function(t){delete e.dataset.key}};case"on":return function(t,n){e.addEventListener(t,n)};case"unsub":return function(t,n){e.removeEventListener(t,n)};case"fetch":return function(t,n={}){e.dispatchEvent(new CustomEvent("fetching",{detail:{url:t,options:n,element:e}})),fetch(t,n).then(e=>e.text()).then(o=>{e.innerHTML=o,e.dispatchEvent(new CustomEvent("fetched",{detail:{url:t,options:n,element:e}}))}).catch(o=>{e.dispatchEvent(new CustomEvent("fetch-error",{detail:{url:t,options:n,error:o,element:e}}))})};case"html":return{get:function(){return e.innerHTML},set:function(t){e.innerHTML=t}}}return t}})}function $$(e){const t=document.querySelectorAll(e);return new Proxy(t,{get:(e,n,o)=>void 0!==n&&"click"===n?function(t){e.forEach(e=>e.addEventListener("click",t))}:t})}function $c(e,t){const n=document.createElement(e);if(void 0!==t)for(const[e,o]of Object.entries(t))n.setAttribute(e,o);return n}function $id(e){const t=document.getElementById(e);return new Proxy(t,{get(e,n,o){if(void 0!==n)switch(n){case"click":return function(t){e.addEventListener("click",t)};case"data":return{get:function(t){return e.dataset[t]},set:function(t,n){e.dataset[t]=n},delete:function(t){delete e.dataset.key}};case"on":return function(t,n){e.addEventListener(t,n)};case"unsub":return function(t,n){e.removeEventListener(t,n)};case"fetch":return function(t,n={}){e.dispatchEvent(new CustomEvent("fetching",{detail:{url:t,options:n,element:e}})),fetch(t,n).then(e=>e.text()).then(o=>{e.innerHTML=o,e.dispatchEvent(new CustomEvent("fetched",{detail:{url:t,options:n,element:e}}))}).catch(o=>{e.dispatchEvent(new CustomEvent("fetch-error",{detail:{url:t,options:n,error:o,element:e}}))})};case"html":return{get:function(){return e.innerHTML},set:function(t){e.innerHTML=t}}}return t}})}document.addEventListener("DOMContentLoaded",function(){!function(){const e=document.createElement("link");e.type="text/css",e.rel="stylesheet",e.href=prod?"/dist/components.min.css":"/assets/components.css",document.head.appendChild(e)}()});class Carousel extends HTMLElement{constructor(){super()}connectedCallback(){if(window.carousel?window.carousel&&this.dataset.forceOverwrite?window.carousel=this:console.warn("More than 1 carousel element has been detected. The window.carousel has been to assigned to the first carousel element detected. \nTo assign this element make sure to add 'data-force-overwrite' attribute to this element.\nOr assign via adding a 'data-label' attribute and access it via window.carousels."):window.carousel=this,this.dataset.label){if(this.dataset["force-overwrite"])return void console.error("Cannot assign a label to a carousel element when 'data-force-overwrite' is present. Please remove 'data-force-overwrite' to assign a label.");window.carousels[this.dataset.label]=this}}disconnectedCallback(){window.carousel=null,window.carousels[this.dataset.label]=null}static get instance(){return window.carousel}static getInstance(e){return window.carousels[e]}static get instances(){return window.carousels}next(){let e=this.querySelector("[data-active]");var t=Array.from(this.children).indexOf(e)+1,n=this.children[t>this.children.length-1?0:t];delete e.dataset.active,n.dataset.active=""}prev(){let e=this.querySelector("[data-active]");var t=Array.from(this.children).indexOf(e)-1,n=this.children[t<0?this.children.length-1:t];delete e.dataset.active,n.dataset.active=""}}class Sidebar extends HTMLElement{static _instance=null;constructor(){super(),window.sidebar||(window.sidebar=this)}static get instance(){return window.sidebar}open(){this.setAttribute("open","")}close(){this.removeAttribute("open")}toggle(){this.toggleAttribute("open")}}class Preloader extends HTMLElement{constructor(){super(),window.preloader||(window.preloader=this)}disconnectedCallback(){window.preloader=null}setLoadingPage(e){this.loadingPage=e}setFallbackPage(e){this.fallbackPage=e}load(e,t={}){this.innerHTML=this.loadingPage??"",fetch(e,t).then(e=>e.text()).then(e=>{this.innerHTML=e}).catch(e=>{console.error(e),this.innerHTML=this.fallbackPage??""})}}class PopOver extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.shadow.innerHTML='\n\n      <style>\n        button {\n          border: 0;\n          background: none;\n          cursor: pointer;\n\n          anchor-name: --popoverBtn;\n        }\n\n        #popover-content {\n          position-anchor: --popoverBtn;\n            position: fixed;\n            top: anchor(bottom);\n            left: anchor(left);\n            margin: 10px 5px;\n\n            border: 0;\n            box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, .25);\n            border-radius: 5px;\n            min-height: 10rem;\n            min-width: 15rem;\n        }\n      </style>\n    \n      <div>\n        <button popovertarget="popover-content">\n          <slot name="button"></slot>\n        </button>\n        <div popover id="popover-content">\n          <slot name="popover-content"></slot>\n        </div>\n      </div>\n    '}}class Modal extends HTMLDialogElement{constructor(){super(),this._onTransitionEnd=this._onTransitionEnd.bind(this)}openModal(){this.showModal(),requestAnimationFrame(()=>this.content.dataset.open="")}closeModal(){delete this.content.dataset.open,this.content.addEventListener("transitionend",this._onTransitionEnd)}_onTransitionEnd(e){console.log(e.propertyName),"scale"===e.propertyName&&(this.close(),this.content.removeEventListener("transitionend",this._onTransitionEnd))}get content(){return this.querySelector("[data-content]")}}class Copyright extends HTMLElement{constructor(){super();const e=new Date;this.year=e.getFullYear()}connectedCallback(){this.innerHTML=`\n      <span>&copy;${this.year}</span>\n    `}}class ScriptLetter extends HTMLElement{constructor(){super()}get words(){this.getAttribute("data-words")}connectedCallback(){if(console.log(this.words),this.dataset.letter&&(this.innerHTML=`&${this.dataset.letter}scr;`),null!=this.words){const e=this.words.split("").map(e=>`&${e}scr;`).join("");console.log(e)}}}class StatefulView extends HTMLElement{#e={};get state(){return this.#e}set state(e){Object.assign(this.#e,e),"function"==typeof this.render&&(this.shadowRoot.innerHTML=this.render(e))}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(document.createElement("style")),Object.defineProperties(this,{styleSheet:{value:e=>{this.shadowRoot.querySelector("style").innerHTML=e},configurable:!1,writable:!1,enumerable:!1},on:{value:(e,t)=>{this.shadowRoot.addEventListener(e,t)},configurable:!1,writable:!1,enumerable:!1},setState:{value:(e,t)=>{this.state={[e]:t}},configurable:!1,writable:!1,enumerable:!1}}),"function"==typeof this.render&&(this.shadowRoot.innerHTML=this.render(this.state))}render(e){}}class Counter extends StatefulView{constructor(){super(),this.state={count:0},this.on("click",e=>{"increment"==e.target.id?(this.state={count:this.state.count+1},console.log("Increment")):"decrement"==e.target.id&&(this.state={count:this.state.count-1},console.log("Decrement"))})}render(e){return console.log(e),`\n      <button id="decrement">-</button>${e.count}<button id="increment">+</button>\n    `}}customElements.define("html-counter",Counter),customElements.define("html-sidebar",Sidebar),customElements.define("html-carousel",Carousel),customElements.define("html-preloader",Preloader),customElements.define("html-popover",PopOver),customElements.define("html-modal",Modal,{extends:"dialog"}),customElements.define("html-copyright",Copyright),customElements.define("html-scr",ScriptLetter);